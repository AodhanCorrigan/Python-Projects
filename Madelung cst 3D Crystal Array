from numpy import sqrt
import time
t0=time.time()

def m(i,j,k): #define function to calculate individual item of sum
    if (i+j+k)%2==0: #even
        m=1/sqrt(i**2+j**2+k**2)
    elif (i+j+k)%2!=0: #odd
        m=-1/sqrt(i**2+j**2+k**2)
    return m


def madelung(L):#calculate madelung cst for lattice size L
    M_r=[] #declare list that will be summed
    for n in range(-L,L+1):
        i=n #run through all values of i
        for n in range(-L,L+1):
            j=n #run through all values of j with i fixed
            for n in range(-L,L+1):
                k=n #run through all values of k with i,j fixed
                if i==0 and j==0 and k==0:
                    continue #if coords=0,0,0 skip
                else:
                    m_r=m(i,j,k)#else calculate i,j,k-th value of sum
                    M_r.append(m_r)#add to list
    M=sum(M_r)#sum all i,j,k-th elements
    return M

x=[]#list for x axis elements, lattice size L
y=[]#list for y axis elements, calculated value for lattice size L

for L in range(1,30): #run through lattice sizes 1 through 30
    x.append(L)
    y.append(madelung(L))
plot(x,y,"k-")
show()
print(round(time.time()-t0,2))
